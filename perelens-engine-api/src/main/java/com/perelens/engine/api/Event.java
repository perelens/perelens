/**
 * 
 */
package com.perelens.engine.api;

import java.util.Collection;
import java.util.Iterator;

/**
 * Copyright 2020-2023 Steven Branda
   Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" 
   BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing 
   permissions and limitations under the License

 * 
 * Interface to represent an Event.
 * 
 * @author Steve Branda
 *
 */
public interface Event {
	
	public String getProducerId();
	
	public EventType getType();
	
	public long getTime();
	
	public Collection<EventType> getResponseTypes();
	
	public Iterator<Event> causedBy();
	
	/**
	 * A long value that fixes the absolute order of events generated by a given producer.
	 * This is only used to distinguish the ordering of events generated at the exact same time by the same producer.
	 * If two events are from the same producer, the event with the greater time must have a greater ordinal.
	 * 
	 * This value must be greater than 1
	 * 
	 * @return
	 */
	public long getOrdinal();
	
	default EventMagnitude getMagnitude() {
		return EventMagnitude.NO_MAGNITUDE;
	};
	
	/**
	 * Returns a positive long that can provide optimization information for event interactions
	 * 
	 * @return
	 */
	default long getTimeOptimization() {
		return NOT_TIME_OPTIMIZED;
	}
	
	public static final long NOT_TIME_OPTIMIZED = -1;
}
